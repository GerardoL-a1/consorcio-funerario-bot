
from flask import Flask, request, jsonify
from planes_info import responder_plan
import requests
import os

app = Flask(__name__)

# Claves seguras desde variables de entorno
TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN")
TWILIO_MESSAGING_URL = f"https://api.twilio.com/2010-04-01/Accounts/{TWILIO_ACCOUNT_SID}/Messages.json"
TWILIO_AUTH = (TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)

NUMERO_REENVIO = "+525523604519"

# Estados de sesi√≥n por n√∫mero
sesiones = {}

# Ruta ra√≠z para evitar errores 404
@app.route("/", methods=["GET"])
def home():
    return "‚úÖ Consorcio Funerario Bot est√° corriendo correctamente."

MENSAJE_BIENVENIDA = (
    "üëã *Bienvenido a Consorcio Funerario*\n\n"
    "Por favor selecciona una opci√≥n para continuar:\n"
    "1Ô∏è‚É£ Planes y Servicios\n"
    "2Ô∏è‚É£ Emergencias\n"
    "3Ô∏è‚É£ Ubicaciones"
)

def contiene_emergencia(mensaje):
    claves = ["fallecido", "suceso", "ubicaci√≥n", "contacto"]
    return sum(p in mensaje for p in claves) >= 3

@app.route("/webhook", methods=["POST"])
def webhook():
    mensaje = request.form.get("Body", "").strip().lower()
    telefono = request.form.get("From", "")
    estado = sesiones.get(telefono, {})

    if mensaje in ["hola", "inicio", "empezar", "buenas"]:
        sesiones[telefono] = {}
        return jsonify({"respuesta": MENSAJE_BIENVENIDA})

    # MEN√ö PRINCIPAL
    if mensaje == "1":
        sesiones[telefono] = {"menu": "planes"}
        return jsonify({"respuesta": (
            "üìã *Selecciona una categor√≠a:*\n"
            "1. Planes de necesidad inmediata\n"
            "2. Planes a futuro\n"
            "3. Servicios individuales"
        )})

    if estado.get("menu") == "planes":
        if mensaje == "1":
            sesiones[telefono] = {"submenu": "inmediato"}
            return jsonify({"respuesta": (
                "‚è±Ô∏è *Planes de necesidad inmediata:*\n"
                "1. Cr√©dito de necesidad inmediata\n"
                "2. Servicio paquete fetal cremaci√≥n\n"
                "3. Servicio paquete sencillo sepultura\n"
                "4. Servicio paquete b√°sico sepultura\n"
                "5. Servicio cremaci√≥n directa\n"
                "6. Servicio paquete de cremaci√≥n\n"
                "7. Servicio paquete legal\n"
                "8. Servicio de refrigeraci√≥n y conservaci√≥n\n"
                "Responde con el n√∫mero del plan para m√°s detalles."
            )})
        elif mensaje == "2":
            sesiones[telefono] = {"submenu": "futuro"}
            return jsonify({"respuesta": (
                "üï∞Ô∏è *Planes a futuro:*\n"
                "1. Red Biker\n"
                "2. Red Plus\n"
                "3. Red Consorcio\n"
                "4. Red Adulto Mayor\n"
                "5. Preventa de Nichos a Temporalidad\n"
                "Responde con el n√∫mero del plan para m√°s detalles."
            )})
        elif mensaje == "3":
            sesiones[telefono] = {"submenu": "servicios"}
            return jsonify({"respuesta": (
                "üß∞ *Servicios individuales:*\n"
                "1. Traslado\n"
                "2. Ata√∫d\n"
                "3. Urna\n"
                "4. Velaci√≥n\n"
                "5. Boletas\n"
                "Responde con el n√∫mero del servicio para m√°s detalles."
            )})

    if estado.get("submenu"):
        categorias = {
            "inmediato": [
                "cr√©dito de necesidad inmediata", "servicio paquete fetal cremaci√≥n",
                "servicio paquete sencillo sepultura", "servicio paquete b√°sico sepultura",
                "servicio cremaci√≥n directa", "servicio paquete de cremaci√≥n",
                "servicio paquete legal", "servicio de refrigeraci√≥n y conservaci√≥n"
            ],
            "futuro": [
                "red biker", "red plus", "red consorcio",
                "red adulto mayor", "preventa de nichos a temporalidad"
            ],
            "servicios": ["traslado", "ata√∫d", "urna", "velaci√≥n", "boletas"]
        }

        try:
            index = int(mensaje) - 1
            plan = categorias[estado["submenu"]][index]
            respuesta = responder_plan(plan)
            return jsonify({"respuesta": respuesta})
        except (ValueError, IndexError):
            return jsonify({"respuesta": "‚ùå Opci√≥n no v√°lida. Intenta nuevamente con un n√∫mero correcto."})

    # ATENCI√ìN A EMERGENCIAS
    if mensaje == "2":
        return jsonify({"respuesta": (
            "üö® *ATENCI√ìN INMEDIATA*\n\n"
            "Por favor responde con los siguientes datos:\n"
            "üîπ Nombre completo del fallecido\n"
            "üîπ Suceso o causa del fallecimiento\n"
            "üîπ Ubicaci√≥n actual del cuerpo\n"
            "üîπ Dos n√∫meros de contacto\n"
            "üîπ Nombre de la persona que nos est√° contactando"
        )})

    if contiene_emergencia(mensaje):
        alerta = f"üì® *EMERGENCIA RECIBIDA*\nMensaje: {mensaje}\nDesde: {telefono}"
        requests.post(TWILIO_MESSAGING_URL, auth=TWILIO_AUTH, data={
            "To": NUMERO_REENVIO,
            "From": "whatsapp:+14155238886",
            "Body": alerta
        })

    # UBICACIONES
    if mensaje == "3":
        sesiones[telefono] = {"menu": "ubicacion"}
        return jsonify({"respuesta": (
            "üìç *Ubicaciones disponibles:*\n"
            "1. Av. Tl√°huac No. 5502, Col. El Rosario, CDMX\n"
            "2. Av. Zacatl√°n No. 60, Col. San Lorenzo Tezonco, CDMX\n"
            "3. Av. Zacatl√°n No. 10, Col. San Lorenzo Tezonco, CDMX\n\n"
            "¬øDeseas agendar una cita en alguna de nuestras sucursales? (S√≠ / No)"
        )})

    if estado.get("menu") == "ubicacion" and mensaje == "s√≠":
        sesiones[telefono] = {"menu": "cita"}
        return jsonify({"respuesta": (
            "üìÖ *Agendemos tu cita.*\n\n"
            "¬øQu√© d√≠a te gustar√≠a visitarnos?\n"
            "¬øEn qu√© horario podr√≠as acudir?\n\n"
            "Tu informaci√≥n ser√° enviada a nuestro equipo."
        )})

    if estado.get("menu") == "cita":
        aviso = f"üìÜ *CITA SOLICITADA*\nCliente: {telefono}\nDatos: {mensaje}"
        requests.post(TWILIO_MESSAGING_URL, auth=TWILIO_AUTH, data={
            "To": NUMERO_REENVIO,
            "From": "whatsapp:+14155238886",
            "Body": aviso
        })
        sesiones[telefono] = {}
        return jsonify({"respuesta": "‚úÖ Gracias. Hemos registrado tu solicitud. Nuestro equipo te contactar√° pronto."})

    # RESPUESTA GENERAL
    return jsonify({"respuesta": (
        "ü§ñ No entend√≠ tu mensaje. Escribe 'hola' para comenzar de nuevo o selecciona una opci√≥n del men√∫ principal."
    )})

if __name__ == "__main__":
    port = int(os.getenv("PORT", 5000))
    app.run(host="0.0.0.0", port=port
    
