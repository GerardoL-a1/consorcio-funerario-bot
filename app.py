
from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from planes_info import responder_plan
import requests
import os

app = Flask(__name__)

TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN")
TWILIO_MESSAGING_URL = f"https://api.twilio.com/2010-04-01/Accounts/{TWILIO_ACCOUNT_SID}/Messages.json"
TWILIO_AUTH = (TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)

NUMERO_REENVIO = "+525523604519"
sesiones = {}

@app.route("/", methods=["GET"])
def home():
    return "‚úÖ Bot Consorcio Funerario funcionando."

MENSAJE_BIENVENIDA = (
    "üëã *Bienvenido a Consorcio Funerario*\n\n"
    "Gracias por escribirnos.\n\n"
    "Por favor ind√≠quenos *en qu√© le gustar√≠a recibir informaci√≥n o en qu√© podemos apoyarle*:\n"
    "- Atenci√≥n inmediata por *emergencia*\n"
    "- Conocer nuestros *servicios funerarios*\n"
    "- Consultar nuestras *ubicaciones disponibles*\n\n"
    "üìå Puede escribir palabras como: *emergencia*, *planes*, *nichos*, *traslado*, *ubicaci√≥n*, etc."
)

claves_planes = ["plan", "planes", "servicio", "servicios", "paquete", "informaci√≥n", "informacion"]
claves_emergencia = ["emergencia", "urgente", "fallecido", "muri√≥", "murio", "accidente", "suceso"]
claves_ubicacion = ["ubicaci√≥n", "ubicaciones", "sucursal", "sucursales", "direcci√≥n", "direccion"]
claves_volver = ["volver", "men√∫", "menu", "inicio"]

def contiene(palabras, mensaje):
    return any(p in mensaje.lower() for p in palabras)

def responder(texto):
    respuesta = MessagingResponse()
    respuesta.message(texto)
    return str(respuesta)

@app.route("/webhook", methods=["POST"])
def webhook():
    mensaje = request.form.get("Body", "").strip()
    telefono = request.form.get("From", "")
    estado = sesiones.get(telefono, {})
    msj_lower = mensaje.lower()

    if contiene(claves_volver, msj_lower):
        sesiones[telefono] = {}
        return responder(MENSAJE_BIENVENIDA)

    if not estado:
        if contiene(claves_emergencia, msj_lower):
            sesiones[telefono] = {"menu": "emergencia"}
            return responder(
                "üö® *ATENCI√ìN INMEDIATA*\n\n"
                "Por favor responde con los siguientes datos:\n"
                "üîπ Nombre completo del fallecido\n"
                "üîπ Suceso o causa del fallecimiento\n"
                "üîπ Ubicaci√≥n actual del cuerpo\n"
                "üîπ Dos n√∫meros de contacto\n"
                "üîπ Nombre de la persona que nos est√° contactando"
            )
        elif contiene(claves_ubicacion, msj_lower):
            sesiones[telefono] = {"menu": "ubicacion"}
            return responder(
                "üìç *Ubicaciones disponibles:*\n"
                "1. Av. Tl√°huac No. 5502, Col. El Rosario, CDMX\n"
                "2. Av. Zacatl√°n No. 60, Col. San Lorenzo Tezonco, CDMX\n"
                "3. Av. Zacatl√°n No. 10, Col. San Lorenzo Tezonco, CDMX\n\n"
                "¬øDeseas agendar una cita en alguna de nuestras sucursales? (S√≠ / No)"
            )
        elif contiene(claves_planes, msj_lower):
            sesiones[telefono] = {"menu": "planes"}
            return responder(
                "üìã *Selecciona una categor√≠a:*\n"
                "1. Planes de necesidad inmediata\n"
                "2. Planes a futuro\n"
                "3. Servicios individuales"
            )
        else:
            return responder(MENSAJE_BIENVENIDA)

    if estado.get("menu") == "emergencia":
        alerta = f"üì® *EMERGENCIA RECIBIDA*\nMensaje: {mensaje}\nDesde: {telefono}"
        requests.post(TWILIO_MESSAGING_URL, auth=TWILIO_AUTH, data={
            "To": NUMERO_REENVIO,
            "From": "whatsapp:+14155238886",
            "Body": alerta
        })
        sesiones[telefono] = {}
        return responder("‚úÖ Gracias. Hemos recibido tu emergencia. Un asesor te contactar√° de inmediato.")

    if estado.get("menu") == "ubicacion":
        if msj_lower in ["s√≠", "si"]:
            sesiones[telefono] = {"menu": "cita"}
            return responder(
                "üìÖ *Agendemos tu cita.*\n\n"
                "¬øQu√© d√≠a te gustar√≠a visitarnos?\n"
                "¬øEn qu√© horario podr√≠as acudir?\n\n"
                "Tu informaci√≥n ser√° enviada a nuestro equipo."
            )
        else:
            sesiones[telefono] = {}
            return responder("‚úÖ Gracias por consultar nuestras ubicaciones. Si necesitas otra informaci√≥n, escribe *men√∫*.")

    if estado.get("menu") == "cita":
        datos = f"üìÜ *CITA SOLICITADA*\nCliente: {telefono}\nDatos: {mensaje}"
        requests.post(TWILIO_MESSAGING_URL, auth=TWILIO_AUTH, data={
            "To": NUMERO_REENVIO,
            "From": "whatsapp:+14155238886",
            "Body": datos
        })
        sesiones[telefono] = {}
        return responder("‚úÖ Gracias. Hemos registrado tu solicitud. Nuestro equipo te contactar√° pronto.")

    if estado.get("menu") == "planes":
        if mensaje == "1":
            sesiones[telefono] = {"submenu": "inmediato"}
            return responder(
                "‚è±Ô∏è *Planes de necesidad inmediata:*\n"
                "A. Cr√©dito de necesidad inmediata\n"
                "B. Servicio paquete fetal cremaci√≥n\n"
                "C. Servicio paquete sencillo sepultura\n"
                "D. Servicio paquete b√°sico sepultura\n"
                "E. Servicio cremaci√≥n directa\n"
                "F. Servicio paquete de cremaci√≥n\n"
                "G. Servicio paquete legal\n"
                "H. Servicio de refrigeraci√≥n y conservaci√≥n\n\n"
                "Escribe la letra correspondiente para m√°s informaci√≥n."
            )
        elif mensaje == "2":
            sesiones[telefono] = {"submenu": "futuro"}
            return responder(
                "üï∞Ô∏è *Planes a futuro:*\n"
                "I. Red Biker\n"
                "J. Red Plus\n"
                "K. Red Consorcio\n"
                "L. Red Adulto Mayor\n"
                "M. Preventa de Nichos a Temporalidad\n\n"
                "Escribe la letra correspondiente para m√°s informaci√≥n."
            )
        elif mensaje == "3":
            sesiones[telefono] = {"submenu": "servicios"}
            return responder(
                "üß∞ *Servicios individuales:*\n"
                "N. Traslado\n"
                "O. Ata√∫d\n"
                "P. Urna\n"
                "Q. Velaci√≥n\n"
                "R. Boletas\n"
                "S. Carroza local\n"
                "T. Carroza a pante√≥n u horno crematorio\n"
                "U. Carroza legal\n"
                "V. Cami√≥n local\n"
                "W. Embalsamado\n"
                "X. Embalsamado legal\n"
                "Y. Embalsamado infecto-contagiosa\n"
                "Z. Tr√°mites de inhumaci√≥n\n"
                "AA. Tr√°mites de cremaci√≥n\n"
                "AB. Tr√°mites legales\n"
                "AC. Tr√°mites de traslado\n"
                "AD. Tr√°mites de internaci√≥n nacional\n"
                "AE. Tr√°mites de internaci√≥n internacional\n"
                "AF. Equipo de velaci√≥n\n"
                "AG. Cirios\n"
                "AH. Capilla de gobierno\n"
                "AI. Capilla particular\n"
                "AJ. Traslado carretero por km\n"
                "AK. Traslado de terracer√≠a por km\n"
                "AL. Cami√≥n for√°neo por km\n\n"
                "Escribe la letra correspondiente para m√°s informaci√≥n."
            )

    if estado.get("submenu"):
        texto = responder_plan(msj_lower)
        if "No entend√≠ tu mensaje" in texto:
            return responder("‚ùå No reconocimos tu selecci√≥n. Intenta con otra letra o palabra clave del servicio que necesitas.")
        return responder(texto)

    return responder(MENSAJE_BIENVENIDA)
